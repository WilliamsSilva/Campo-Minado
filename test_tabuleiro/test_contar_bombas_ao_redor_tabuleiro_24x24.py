import unittest
from jogo.tabuleiro_minado import Tabuleiro_minado

class TestTabuleiroMinado(unittest.TestCase):

#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_0x0__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x0 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 0)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x1 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 0)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 0)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x22 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 0)

    def test_contar_bombas_ao_redor_0x23__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x23 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 23), 0)

#LINHA 0X1
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_1x0__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 1x0 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 0)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 1x1 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 0)

    def test_contar_bombas_ao_redor_1x13_tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 1x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 13), 0)

    def test_contar_bombas_ao_redor_1x22__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x22 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 22), 0)

    def test_contar_bombas_ao_redor_1x23__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x23 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 23), 0)
#LINHA 13
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_13x0__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 13x0 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 0), 0)

    def test_contar_bombas_ao_redor_13x1__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 13x1 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 1), 0)

    def test_contar_bombas_ao_redor_13x13_tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 13x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 13), 0)

    def test_contar_bombas_ao_redor_13x22__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 13x22 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 22), 0)

    def test_contar_bombas_ao_redor_13x23__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 13x23 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 23), 0)

#LINHA 22
#Sem bombas
    def test_contar_bombas_ao_redor_22x0__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 22x0 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 0), 0)

    def test_contar_bombas_ao_redor_22x1__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 22x1 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 1), 0)

    def test_contar_bombas_ao_redor_22x13_tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 13), 0)

    def test_contar_bombas_ao_redor_22x22__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x22 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 22), 0)

    def test_contar_bombas_ao_redor_22x23__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 22x23 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 23), 0)

#LINHA 23
#Sem bombas
    def test_contar_bombas_ao_redor_23x0__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 23x0 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 0), 0)

    def test_contar_bombas_ao_redor_23x1__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 23x1 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 1), 0)

    def test_contar_bombas_ao_redor_23x13_tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 13), 0)

    def test_contar_bombas_ao_redor_23x22__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 23x22 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 22), 0)

    def test_contar_bombas_ao_redor_23x23__tabuleiro_24x24(self):
        # Tabuleiro sem bombas, a célula 23x23 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 23), 0)

#uma bomba
    def test_contar_bombas_ao_redor_0x0__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 1)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 1)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 1)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 1)

    def test_contar_bombas_ao_redor_0x23__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 23), 1)

#1 bomba
#linha 0
    def test_contar_bombas_ao_redor_1x0__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 1)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 1)

    def test_contar_bombas_ao_redor_1x13_tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 13), 1)

    def test_contar_bombas_ao_redor_1x22__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 22), 1)

    def test_contar_bombas_ao_redor_1x23__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 23), 1)
#LINHA 13
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_13x0__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 13x0 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 1)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 0), 1)

    def test_contar_bombas_ao_redor_13x1__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 13x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 1), 1)

    def test_contar_bombas_ao_redor_13x13_tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 13x13 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 13), 1)

    def test_contar_bombas_ao_redor_13x22__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 13x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 22), 1)

    def test_contar_bombas_ao_redor_13x23__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 13x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 23), 1)

#LINHA 22
#Sem bombas
    def test_contar_bombas_ao_redor_22x0__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 22x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 0), 1)

    def test_contar_bombas_ao_redor_22x1__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 22x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 1), 1)

    def test_contar_bombas_ao_redor_22x13_tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 13), 1)

    def test_contar_bombas_ao_redor_22x22__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 22), 1)

    def test_contar_bombas_ao_redor_22x23__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 22x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 23), 1)

    def test_contar_bombas_ao_redor_23x0__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 23x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 0), 1)

    def test_contar_bombas_ao_redor_23x1__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 23x1
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 1), 1)

    def test_contar_bombas_ao_redor_23x13_tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 13),1)

    def test_contar_bombas_ao_redor_23x22__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 23x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 22), 1)

    def test_contar_bombas_ao_redor_23x23__tabuleiro_24x24_1_bomba(self):
        # Tabuleiro sem bombas, a célula 23x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 23), 1)
#2 bombas
    def test_contar_bombas_ao_redor_0x0__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 2)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 2)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 2)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 2)

    def test_contar_bombas_ao_redor_0x23__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 23), 2)

#LINHA 0X1
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_1x0__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 2)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 2)

    def test_contar_bombas_ao_redor_1x13_tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 13), 2)

    def test_contar_bombas_ao_redor_1x22__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 22), 2)

    def test_contar_bombas_ao_redor_1x23__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 23), 2)
#LINHA 13
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_13x0__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 13x0 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 1)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 0), 2)

    def test_contar_bombas_ao_redor_13x1__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 13x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 1), 2)

    def test_contar_bombas_ao_redor_13x13_tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 13x13 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 13), 2)

    def test_contar_bombas_ao_redor_13x22__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 13x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 22), 2)

    def test_contar_bombas_ao_redor_13x23__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 13x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 23), 2)

#LINHA 22
#Sem bombas
    def test_contar_bombas_ao_redor_22x0__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 22x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 0), 2)

    def test_contar_bombas_ao_redor_22x1__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 22x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 1), 2)

    def test_contar_bombas_ao_redor_22x13_tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 13), 2)

    def test_contar_bombas_ao_redor_22x22__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 22), 2)

    def test_contar_bombas_ao_redor_22x23__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 22x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 23), 2)

#LINHA 23
#Sem bombas
    def test_contar_bombas_ao_redor_23x0__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 23x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 0), 2)

    def test_contar_bombas_ao_redor_23x1__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 23x1
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 1), 2)

    def test_contar_bombas_ao_redor_23x13_tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 13),2)

    def test_contar_bombas_ao_redor_23x22__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 23x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 22), 2)

    def test_contar_bombas_ao_redor_23x23__tabuleiro_24x24_2_bomba(self):
        # Tabuleiro sem bombas, a célula 23x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 23), 2)

#com 3 bombas
    def test_contar_bombas_ao_redor_0x0__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 3)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 3)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 3)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 3)

    def test_contar_bombas_ao_redor_0x23__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 23), 3)

#LINHA 0X1
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_1x0__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 3)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 3)

    def test_contar_bombas_ao_redor_1x13_tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 13), 3)

    def test_contar_bombas_ao_redor_1x22__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 22), 3)

    def test_contar_bombas_ao_redor_1x23__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 23), 3)
#LINHA 13
#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_13x0__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 13x0 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 1)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 0), 3)

    def test_contar_bombas_ao_redor_13x1__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 13x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 1), 3)

    def test_contar_bombas_ao_redor_13x13_tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 13x13 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 13), 3)

    def test_contar_bombas_ao_redor_13x22__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 13x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 22), 3)

    def test_contar_bombas_ao_redor_13x23__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 13x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 23), 3)

#LINHA 22
#Sem bombas
    def test_contar_bombas_ao_redor_22x0__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 22x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 0), 3)

    def test_contar_bombas_ao_redor_22x1__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 22x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 1), 3)

    def test_contar_bombas_ao_redor_22x13_tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 13), 3)

    def test_contar_bombas_ao_redor_22x22__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 22), 3)

    def test_contar_bombas_ao_redor_22x23__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 22x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 23), 3)

#LINHA 23
#Sem bombas
    def test_contar_bombas_ao_redor_23x0__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 23x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 0), 3)

    def test_contar_bombas_ao_redor_23x1__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 23x1
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 1), 3)

    def test_contar_bombas_ao_redor_23x13_tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 13),3)

    def test_contar_bombas_ao_redor_23x22__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 23x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 22), 3)

    def test_contar_bombas_ao_redor_23x23__tabuleiro_24x24_3_bomba(self):
        # Tabuleiro sem bombas, a célula 23x23 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 23), 3)

#4 bombas
    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 4)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 4)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','ó','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 4)

#linha 0
    def test_contar_bombas_ao_redor_1x0__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0
        tabuleiro = [[ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 4)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [[ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 4)

    def test_contar_bombas_ao_redor_1x13_tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 13), 4)

    def test_contar_bombas_ao_redor_1x22__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 22), 4)

    def test_contar_bombas_ao_redor_1x23__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 23), 4)

#LINHA 13
    def test_contar_bombas_ao_redor_13x0__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 13x0 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 1)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 0), 4)

    def test_contar_bombas_ao_redor_13x1__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 13x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 1), 4)

    def test_contar_bombas_ao_redor_13x13_tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 13x13 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 13), 4)

    def test_contar_bombas_ao_redor_13x22__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 13x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 22), 4)

    def test_contar_bombas_ao_redor_13x23__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 13x23
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 13, 23), 4)

#LINHA 22
#Sem bombas
    def test_contar_bombas_ao_redor_22x0__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 22x0
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 0), 4)

    def test_contar_bombas_ao_redor_22x1__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 22x1 
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 1), 4)

    def test_contar_bombas_ao_redor_22x13_tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13 não deve ter bombas ao redor
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 13), 4)

    def test_contar_bombas_ao_redor_22x22__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','ó'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 22, 22), 4)

    def test_contar_bombas_ao_redor_23x1__tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 23x1
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 1), 4)

    def test_contar_bombas_ao_redor_23x13_tabuleiro_24x24_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 23, 13),4)

#5 bomba
    def test_contar_bombas_ao_redor_0x1__tabuleiro_24x24_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1
        tabuleiro = [[ 'ó', '-','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ 'ó', 'ó','ó', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 5)

    def test_contar_bombas_ao_redor_0x13_tabuleiro_24x24_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x13
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 13), 5)

    def test_contar_bombas_ao_redor_0x22__tabuleiro_24x24_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x22
        tabuleiro = [[ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','ó','-','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','ó','ó','ó'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],
                     [ '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-','-','-','-','-','-','-','-','-','-'],]
        tabuleiro_minado = Tabuleiro_minado(24, 24, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 22), 5)

if __name__ == '__main__':
    unittest.main()
